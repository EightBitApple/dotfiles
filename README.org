#+title: Dotfiles
#+subtitle: My NixOS and Home Manager Configuration.

[[./desktop.png]]

* Structure
My system and [[https://github.com/nix-community/home-manager][home-manager]] configurations.
Both configurations are managed by a flake in the root of this repository.
The system configuration imports the hosts' configurations and everything under ~./modules/nixos/~.
The home-manager configuration imports the host's configurations and everything under ~./modules/home-manager/~.
Each module can be disabled on a host-by-host bases by using the ~disabledModules~ list inside each hosts' ~configuration.nix~ and ~home.nix~.

* Installing
*Installation requires an Internet connection.*
If Wi-Fi does not work due to missing drivers, and Ethernet is too inconvenient in your scenario, use a mobile device's USB or Bluetooth tethering.
*Replace ~<HOSTNAME>~ with a valid host name under ~/dotfiles/hosts/~ (e.g. ~desktop~, ~laptop~, etc.).*

Note that the ~pi-home~ host has yet to get disko support, therefore step 5 should be skipped if installing for that host.

1. Download and flash NixOS onto bootable media.
   Either the graphical or minimal images can be used.
2. Boot into media.
3. Open a terminal or TTY and enter ~nix-shell -p git neovim~ to temporarily install Git and Neovim.
   You can replace ~neovim~ with a text editor of your choice.
4. Clone this repository using ~git clone https://github.com/EightBitApple/dotfiles~.
5. Run ~sudo nix --experimental-features "nix-command flakes" run github:nix-community/disko -- --mode disko ./dotfiles/hosts/<HOSTNAME>/disko.nix~ to partition, format and mount the drive using [[https://github.com/nix-community/disko][disko]].
6. Run ~nixos-install --flake ./dotfiles#<HOSTNAME>~ to build and install both the system and home-manager configurations.
7. Run ~reboot~ to reboot into your new system.
8. After logging in clone this repository to the top of your home directory; certain helper commands expect the repo to be there.

* Maintenance
These dotfiles install packages that aid in system maintenance:

+ [[https://github.com/viperML/nh][nh]] - Reimplements several Nix commands with extra functionality.
+ [[https://gitlab.com/khumba/nvd][nvd]] - Summarises the version differences of packages between two Nix Store paths.
+ [[https://github.com/maralorn/nix-output-monitor][nix-output-monitor]] - Shows additional information while building, such as a dependency graph.

** Rebuilding
+ Run ~nh os switch~ to rebuild the system.

** Upgrading
+ Run ~nh os switch -u~ to update ~flake.lock~ before rebuilding.
+ You can also run ~nix flake update~ while inside ~dotfiles/~ to update ~flake.lock~ without rebuilding.

** Garbage Collection and Optimisation
+ Run ~nh clean all -k 4 --dry~ to see what will get deleted before performing an actual clean.
  This command will delete all generations except the four latest ones.
+ Run ~nh clean all -k 4~ to delete these generations and garbage collect the Nix Store.
+ ~nh-clean.service~ will run the above command every Monday.
+ ~nix.settings.auto-optimise-store~ is enabled by default to save drive space at the cost of longer build times.

** Rollbacks
This configuration hides the list to choose generations while booting.
If you need to rollback to a previous generation, press any key when the POST splash screen appears.

* Things to Do [2/6]
- [X] Add secret management.
- [X] Add home server configuration (requires secret management).
- [ ] Add Wireguard VPN configuration for home server and select hosts (requires secret management).
- [ ] Add disko to home server configuration.
- [ ] Create an installation script.
- [ ] Add impermanence.

* Credits
+ [[https://www.youtube.com/channel/UC_zBdZ0_H_jn41FDRG7q4Tw][Vimjoyer]] for his NixOS tutorials.
+ [[https://www.youtube.com/channel/UCeZyoDTk0J-UPhd7MUktexw][LibrePhoenix]] for his NixOS tutorials.
+ [[https://nixos.wiki/wiki/Main_Page][The unofficial NixOS Wiki]] for articles on configuring specific software.
+ Credits to external resources used in this repository are in [[./modules/home-manager/resources/README.org][another README]].
